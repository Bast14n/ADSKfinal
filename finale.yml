---
# - hosts: app_nodes
#   become: yes
#   vars:
#     jar_location: ../studentCrud/target/studentcrudapp-0.0.1-SNAPSHOT.jar
#     app_location: /opt/studentapp/studentapp.jar
#     app_user: studentapp
#     metrics_storage_ip: 172.31.23.78
#   tasks:
#     - name: "install jre"
#       yum:
#         name: java-1.8.0-openjdk
#         state: present
#     - name: "create path"
#       file:
#         path: /opt/studentapp
#         state: directory
#     - name: "copy .jar to remote machine"
#       copy:
#         src: "{{jar_location}}"
#         dest: "{{app_location}}"
#     - name: "create user for service"
#       user:
#         name: "{{app_user}}"
#     - name: "create path"
#       file:
#         path: /etc/systemd/system
#         state: directory
#     - name: "copy systemd config"
#       template:
#         src: template/studentapp.service
#         dest: /etc/systemd/system/studentapp.service
#     - name: "start service"
#       systemd:
#         name: "studentapp.service"
#         # daemon_reload: yes
#         state: restarted
#         enabled: yes
#     - name: "install telegraph"
#       yum:
#         name: https://dl.influxdata.com/telegraf/releases/telegraf-1.8.3-1.x86_64.rpm
#         state: present
#     - template:
#         src: template/telegraf.conf
#         dest: /etc/telegraf/telegraf.conf
#     - service:
#         name: telegraf
#         state: restarted
- hosts: app_nodes
  become: yes
  vars:
    jar_location: ../studentCrud/target/studentcrudapp-0.0.1-SNAPSHOT.jar
    app_location: /opt/studentapp/studentapp.jar
    app_user: studentapp
    metrics_storage_ip: 172.31.23.78
  tasks:
  - name: "remove java 1.7"
    yum:
      name: java-1.7.0-openjdk
      state: absent
  - name: "install jre"
    yum:
      name: java-1.8.0-openjdk
      state: present
  - name: "create path"
    file:
      path: /opt/studentapp
      state: directory
  - name: "copy .jar to remote machine"
    copy:
      src: "{{jar_location}}"
      dest: "{{app_location}}"
  - name: "create user for service"
    user:
      name: "{{app_user}}"
  - name: "copy systemd config"
    template:
      src: template/studentapp.service
      dest: /etc/systemd/system/studentapp.service
  - name: "start service"
    systemd:
      name: "studentapp.service"
      daemon_reload: yes
      enabled: yes #TODO: ask
      state: restarted
  - name: "install telegraf"
    yum:
      name: https://dl.influxdata.com/telegraf/releases/telegraf-1.8.3-1.x86_64.rpm
      state: present
  - template:
      src: template/telegraf.conf
      dest: /etc/telegraf/telegraf.conf
  - service:
      name: telegraf
      state: restarted


- hosts: proxy_nodes
  become: yes
  vars:
    email: sebastian.surowka@gmail.com
    domain: czolo.ml
  tasks:
    - yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        state: present
    - name: Install nginx web server
      yum:
        name: nginx
        state: present
    - name: Add nginx.conf file
      template:
        src: template/temp_nginx.conf
        dest: /etc/nginx/conf.d/my_nginx.conf
    - service:
        name: nginx
        state: restarted
    - yum:
        name: python2-certbot-nginx
        state: present
    - shell: "sudo certbot -i nginx -d '{{domain}}' --nginx -m '{{email}}' --agree-tos --redirect"
    

- hosts: metrics_storage
  become: yes
  tasks:
  - yum:
      name: https://dl.influxdata.com/influxdb/releases/influxdb-1.7.1.x86_64.rpm
      state: present
  - service:
      name: influxdb
      state: restarted
  - name: "create databa on "
    shell: "curl -i -XPOST http://localhost:8086/query --data-urlencode 'q=CREATE DATABASE metrics'"
    
  - name: "install grafana"
    yum:
      name: https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-5.3.4-1.x86_64.rpm
      state: present
      
  - service:
      name: grafana-server
      state: restarted

  - name: Create influxdb datasource
    grafana_datasource:
      name: "my_influx"
      grafana_url: "http://localhost:3000"
      grafana_user: "admin"
      grafana_password: "admin"
      org_id: "1"
      ds_type: "influxdb"
      url: "http://localhost:8086"
      database: "metrics"
  - name: "create path"
    file:
      path: /temp
      state: directory
  - name: Copy grafana dashboard 
    copy:
      src: dashboard/system_load.json
      dest: /tmp/my_dashboard.json
  - name: Import Grafana dashboard
    grafana_dashboard:
      grafana_url: "http://localhost:3000"
      grafana_user: "admin"
      grafana_password: "admin"
      state: present
      message: Updated by ansible
      overwrite: yes
      path: /tmp/my_dashboard.json
      
- hosts: db
  become: yes
  tasks:
  - copy:
      src: template/mongodb-org-4.0.repo
      dest: /etc/yum.repos.d/mongodb-org-4.0.repo
  - yum:
      name: mongodb-org
      state: present
  - service: name=mongod state=started
  - copy:
      src: template/get-pip.py
      dest: /tmp/get-pip.py
  - name: install scprit
    command: python  /tmp/get-pip.py
  - package:
      name: python-pip
      state: latest 
  - easy_install:
      name: pip
      state: latest
  - pip: name=pymongo state=latest use_mirrors=no
  - mongodb_user:
      database: admin
      name: admin
      password: 1234
      roles: root
      state: present

  
 